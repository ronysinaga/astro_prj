---
import { getCollection, type CollectionEntry } from "astro:content";
import BaseLayout from '../../layouts/BaseLayout.astro';
import BlogPost from '../../components/BlogPost.astro';

interface Frontmatter {
  title: string;
  tags?: string[];
}

interface Post {
  frontmatter: Frontmatter;
  url: string;
}

export async function getStaticPaths() {
  const allPosts = await getCollection("blog");

  // Filter out posts without tags and get unique tags
  const uniqueTags = [...new Set(
    allPosts
      .filter((post: CollectionEntry<'blog'>) => post.data.tags)
      .map((post: CollectionEntry<'blog'>) => post.data.tags)
      .flat()
  )];

  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post: CollectionEntry<'blog'>) => 
      post.data.tags?.includes(tag as string)
    );
    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
}

const { tag } = Astro.params;
const { posts } = Astro.props;
---
<BaseLayout pageTitle={tag}>
  <p>Posts tagged with {tag}</p>
  <ul>
    {posts.map((post: CollectionEntry<'blog'>) => <BlogPost url={`/posts/${post.id}/`} title={post.data.title}/>)}
  </ul>
</BaseLayout>